for line in lines:
    Check until keyword is not tab, ever increasing depth
    if depth is less than last line, and , remove last line and decrease counter by 1
    if keyword is catagory, increase depth by one, copy line, and add 1 to line # !END!
    if keyword is true or false and exists in the dict, copy line, and add 1 to line # !END!

for saved profiles, it'll be stored in TRUE flag | format. When loading it check it to this and then display it as this -->
    
            CATAGORY CHAT
                TRUE
            TRUE
        CATAGORY CHATER
        CAtagory monsterize


for lines in lines:
    check until keyword is not tab, ever increasing depth
    if keyword is catagory and depth is one, add button and panel


todo:
dun make main.py use ttk
make a selector menu for default feature flags
go back to making comparison thing for feature flags


#this is code to read from a dict and from avaiable feature flags and then display feature flags out as a selector and then be able to save it.
#This code is to read line from line from possibly-avaiable-feature-flags and check if that flag is in a list generated from get-feature-flags, remove it from the list, then put a checkbox into a window with the true-faulse from get-feature-flags. If a catagory is found to be empty, it will be removed. And any leftover options in the list

#This code generates a list known as remaining-feature-flags from avaialble-feature-flags and uses it to check if what's in possibly-avaiable-feature-flags exists. If the code builds a catagory that is found to not contain any existing feature flags, that catagory is removed from the pane. and if a feature flag in rem-fea-fla exists, not only is that an option added to the pane, but removed from rem-fea-fla. Anything that remains in rem-fea-fla is added to the end in a new catagory known as "everything else". Wherever flags are added to tkinter, their true-false state is pulled from availabe-feature-flags, which itself was generated by --get-avaibale-feature flags, but is stored in memory, yk?

#Big point, this needs to be a menu that changes between windows, yk?????????
EYE BURN

for line in lines
    for word in line
        if word was not tab
            Goto overThere #please tell me there's a better way to exit.
    overThere #remember what word you were at
    if line(word)



        
            
    